{"version":3,"sources":["webpack:///webpack/bootstrap 6ae0d0487b80a5155874","webpack:///./src/angular-bluebird-promises.js","webpack:///external \"angular\"","webpack:///external \"Promise\""],"names":[],"mappings":";;;;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH;AACA;AACA,MAAK;;AAEL,IAAG;;AAEH;;;;;;;AClDA,0B;;;;;;ACAA,0B","file":"angular-bluebird-promises.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6ae0d0487b80a5155874\n **/","'use strict';\n\nvar angular = require('angular');\nvar bluebird = require('bluebird');\nvar MODULE_NAME = 'mwl.bluebird';\n\nangular\n  .module(MODULE_NAME, [])\n  .constant('Bluebird', bluebird)\n  .config([\"$provide\", \"Bluebird\", function($provide, Bluebird) {\n\n    //Make bluebird API compatible with angular's subset of $q\n    //Adapted from: https://gist.github.com/petkaantonov/8363789\n\n    Bluebird.defer = function() {\n      var b = Bluebird.pending();\n      b.resolve = angular.bind(b, b.fulfill);\n      b.reject = angular.bind(b, b.reject);\n      b.notify = angular.bind(b, b.progress);\n      return b;\n    };\n\n    Bluebird.reject = Bluebird.rejected;\n    Bluebird.when = Bluebird.cast;\n\n    var originalAll = Bluebird.all;\n    Bluebird.all = function(promises) {\n\n      if (angular.isObject(promises) && !angular.isArray(promises)) {\n        return Bluebird.props(promises);\n      } else {\n        return originalAll.call(Bluebird, promises);\n      }\n\n    };\n\n    Bluebird.onPossiblyUnhandledRejection(angular.noop);\n\n    $provide.decorator('$q', function() {\n      return Bluebird;\n    });\n\n  }]).run([\"$rootScope\", \"Bluebird\", function($rootScope, Bluebird) {\n\n    Bluebird.setScheduler(function(cb) {\n      $rootScope.$evalAsync(cb);\n    });\n\n  }]);\n\nmodule.exports = MODULE_NAME;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/angular-bluebird-promises.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = angular;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = Promise;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Promise\"\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}