{"version":3,"sources":["angular-bluebird-promises.js"],"names":[],"mappings":"CAAA,SAAA,EAAA,GAEA,EACA,OAAA,mBACA,SAAA,WAAA,GACA,QAAA,WAAA,WAAA,SAAA,EAAA,GAIA,QAAA,GAAA,EAAA,GACA,MAAA,YACA,MAAA,GAAA,MAAA,EAAA,YAIA,EAAA,MAAA,WACA,GAAA,GAAA,EAAA,SAIA,OAHA,GAAA,QAAA,EAAA,EAAA,QAAA,GACA,EAAA,OAAA,EAAA,EAAA,OAAA,GACA,EAAA,OAAA,EAAA,EAAA,SAAA,GACA,GAGA,EAAA,OAAA,EAAA,SAEA,EAAA,KAAA,SAAA,GACA,MAAA,GAAA,KAAA,IAGA,EAAA,6BAAA,EAAA,MAEA,EAAA,UAAA,KAAA,WACA,MAAA,QAGA,KAAA,aAAA,WAAA,SAAA,EAAA,GAEA,EAAA,aAAA,SAAA,GACA,EAAA,WAAA,SAKA,QAAA","file":"angular-bluebird-promises.min.js","sourcesContent":["(function(angular, Promise) {\n\n  angular\n    .module('mwl.bluebird', [])\n    .constant('Bluebird', Promise)\n    .config([\"$provide\", \"Bluebird\", function($provide, Bluebird) {\n\n      //Make bluebird API compatible with angular's subset of $q\n      //Adapted from: http://bit.ly/1zffMKH\n      function bind(fn, ctx) {\n        return function() {\n          return fn.apply(ctx, arguments);\n        };\n      }\n\n      Bluebird.defer = function() {\n        var b = Bluebird.pending();\n        b.resolve = bind(b.fulfill, b);\n        b.reject = bind(b.reject, b);\n        b.notify = bind(b.progress, b);\n        return b;\n      };\n\n      Bluebird.reject = Bluebird.rejected;\n\n      Bluebird.when = function(a) {\n        return Bluebird.cast(a);\n      };\n\n      Bluebird.onPossiblyUnhandledRejection(angular.noop);\n\n      $provide.decorator('$q', function() {\n        return Bluebird;\n      });\n\n    }]).run([\"$rootScope\", \"Bluebird\", function($rootScope, Bluebird) {\n\n      Bluebird.setScheduler(function(cb) {\n        $rootScope.$evalAsync(cb);\n      });\n\n    }]);\n\n})(angular, Promise);"],"sourceRoot":"/source/"}