{"version":3,"sources":["angular-bluebird-promises.js","webpack:/webpack/bootstrap 327810fbc655fd31b80d","webpack:/src/angular-bluebird-promises.js","webpack:/external \"Promise\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","angular","bluebird","constant","config","$provide","Bluebird","defer","b","pending","resolve","bind","fulfill","reject","notify","progress","rejected","when","cast","originalAll","all","promises","isObject","isArray","props","onPossiblyUnhandledRejection","noop","decorator","run","$rootScope","setScheduler","cb","$evalAsync","Promise"],"mappings":"CAMS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WDEYE,GAAIJ,ECAhBK,QAAA,EDWW,OCPXP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,EAAAA,EAAAD,QAAAH,GDIWI,EAAOE,QAAS,EAGTF,EAAOD,QCxBzB,GAAAD,KDsCU,OCVVF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EDIUF,EAAoBU,EAAI,GAGjBV,EAAoB,KAK/B,SAASI,EAAQD,EAASH,GE5ChC,YAEA,IAAAW,GAAAX,EAAA,GF+CKY,EAAWZ,EAAoB,EE5CpCW,GF+CIP,OAAO,mBE7CXS,SAAA,WAAAD,GACAE,QAAA,WAAA,WAAA,SAAAC,EAAAC,GAKAA,EAAAC,MAAA,WF+CO,GAAIC,GAAIF,EAASG,SE1CxB,OAHAD,GAAAE,QAAAT,EAAAU,KAAAH,EAAAA,EAAAI,SACAJ,EAAAK,OAAAZ,EAAAU,KAAAH,EAAAA,EAAAK,QF+COL,EAAEM,OAASb,EAAQU,KAAKH,EAAGA,EAAEO,UE7CpCP,GAGAF,EAAAO,OAAAP,EAAAU,SACAV,EAAAW,KAAAX,EAAAY,IAEA,IAAAC,GAAAb,EAAAc,GACAd,GAAAc,IAAA,SAAAC,GAEA,MAAApB,GAAAqB,SAAAD,KAAApB,EAAAsB,QAAAF,GF+CgBf,EAASkB,MAAMH,GAEfF,EAAYtB,KAAKS,EAAUe,IEzCxCf,EAAAmB,6BAAAxB,EAAAyB,MAEHrB,EAAAsB,UAAA,KAAA,WACA,MAAArB,QAGGsB,KAAA,aAAA,WAAA,SAAAC,EAAAvB,GAEHA,EAAAwB,aAAA,SAAAC,GF+COF,EAAWG,WAAWD,QAK5BrC,EAAOD,QAAU,gBAKZ,SAASC,EAAQD,GG1GvBC,EAAAD,QAAAQ,SHgHM,SAASP,EAAQD,GAEtBC,EAAOD,QAAUwC","file":"angular-bluebird-promises.min.js","sourcesContent":["/**\n * angular-bluebird-promises - Replaces $q with bluebirds promise API\n * @version v0.4.1\n * @link https://github.com/mattlewis92/angular-bluebird-promises\n * @license MIT\n */\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__(1);\n\tvar bluebird = __webpack_require__(2);\n\t\n\tangular\n\t  .module('mwl.bluebird', [])\n\t  .constant('Bluebird', bluebird)\n\t  .config(function($provide, Bluebird) {\n\t\n\t    //Make bluebird API compatible with angular's subset of $q\n\t    //Adapted from: https://gist.github.com/petkaantonov/8363789\n\t\n\t    Bluebird.defer = function() {\n\t      var b = Bluebird.pending();\n\t      b.resolve = angular.bind(b, b.fulfill);\n\t      b.reject = angular.bind(b, b.reject);\n\t      b.notify = angular.bind(b, b.progress);\n\t      return b;\n\t    };\n\t\n\t    Bluebird.reject = Bluebird.rejected;\n\t    Bluebird.when = Bluebird.cast;\n\t\n\t    var originalAll = Bluebird.all;\n\t    Bluebird.all = function(promises) {\n\t\n\t      if (angular.isObject(promises) && !angular.isArray(promises)) {\n\t        return Bluebird.props(promises);\n\t      } else {\n\t        return originalAll.call(Bluebird, promises);\n\t      }\n\t\n\t    };\n\t\n\t    Bluebird.onPossiblyUnhandledRejection(angular.noop);\n\t\n\t    $provide.decorator('$q', function() {\n\t      return Bluebird;\n\t    });\n\t\n\t  }).run(function($rootScope, Bluebird) {\n\t\n\t    Bluebird.setScheduler(function(cb) {\n\t      $rootScope.$evalAsync(cb);\n\t    });\n\t\n\t  });\n\t\n\tmodule.exports = 'mwl.bluebird';\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = angular;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Promise;\n\n/***/ }\n/******/ ]);\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 327810fbc655fd31b80d\n **/","'use strict';\n\nvar angular = require('angular');\nvar bluebird = require('bluebird');\n\nangular\n  .module('mwl.bluebird', [])\n  .constant('Bluebird', bluebird)\n  .config(function($provide, Bluebird) {\n\n    //Make bluebird API compatible with angular's subset of $q\n    //Adapted from: https://gist.github.com/petkaantonov/8363789\n\n    Bluebird.defer = function() {\n      var b = Bluebird.pending();\n      b.resolve = angular.bind(b, b.fulfill);\n      b.reject = angular.bind(b, b.reject);\n      b.notify = angular.bind(b, b.progress);\n      return b;\n    };\n\n    Bluebird.reject = Bluebird.rejected;\n    Bluebird.when = Bluebird.cast;\n\n    var originalAll = Bluebird.all;\n    Bluebird.all = function(promises) {\n\n      if (angular.isObject(promises) && !angular.isArray(promises)) {\n        return Bluebird.props(promises);\n      } else {\n        return originalAll.call(Bluebird, promises);\n      }\n\n    };\n\n    Bluebird.onPossiblyUnhandledRejection(angular.noop);\n\n    $provide.decorator('$q', function() {\n      return Bluebird;\n    });\n\n  }).run(function($rootScope, Bluebird) {\n\n    Bluebird.setScheduler(function(cb) {\n      $rootScope.$evalAsync(cb);\n    });\n\n  });\n\nmodule.exports = 'mwl.bluebird';\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/angular-bluebird-promises.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = Promise;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Promise\"\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":"/source/"}