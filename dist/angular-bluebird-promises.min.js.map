{"version":3,"sources":["angular-bluebird-promises.js"],"names":["angular","window","module","constant","P","noConflict","config","$provide","Bluebird","defer","b","pending","resolve","bind","fulfill","reject","notify","progress","rejected","when","cast","originalAll","all","promises","isObject","isArray","promiseArray","promiseKeysArray","forEach","promise","key","push","then","results","objectResult","result","index","onPossiblyUnhandledRejection","noop","decorator","run","$rootScope","setScheduler","cb","$evalAsync"],"mappings":"CAAC,SAASA,EAASC,GAEjB,YAEAD,GACGE,OAAO,mBACPC,SAAS,WAAYF,EAAOG,EAAEC,cAC9BC,QAAA,WAAA,WAAO,SAASC,EAAUC,GAKzBA,EAASC,MAAQ,WACf,GAAIC,GAAIF,EAASG,SAIjB,OAHAD,GAAEE,QAAUZ,EAAQa,KAAKH,EAAGA,EAAEI,SAC9BJ,EAAEK,OAASf,EAAQa,KAAKH,EAAGA,EAAEK,QAC7BL,EAAEM,OAAShB,EAAQa,KAAKH,EAAGA,EAAEO,UACtBP,GAGTF,EAASO,OAASP,EAASU,SAC3BV,EAASW,KAAOX,EAASY,IAEzB,IAAIC,GAAcb,EAASc,GAC3Bd,GAASc,IAAM,SAASC,GAEtB,GAAIvB,EAAQwB,SAASD,KAAcvB,EAAQyB,QAAQF,GAAW,CAE5D,GAAIG,MAAmBC,IAQvB,OAPA3B,GAAQ4B,QAAQL,EAAU,SAASM,EAASC,GAE1CH,EAAiBI,KAAKD,GACtBJ,EAAaK,KAAKF,KAIbR,EAAYK,GAAcM,KAAK,SAASC,GAE7C,GAAIC,KAIJ,OAHAlC,GAAQ4B,QAAQK,EAAS,SAASE,EAAQC,GACxCF,EAAaP,EAAiBS,IAAUD,IAEnCD,IAKT,MAAOb,GAAYE,IAKvBf,EAAS6B,6BAA6BrC,EAAQsC,MAE9C/B,EAASgC,UAAU,KAAM,WACvB,MAAO/B,QAGRgC,KAAA,aAAA,WAAI,SAASC,EAAYjC,GAE1BA,EAASkC,aAAa,SAASC,GAC7BF,EAAWG,WAAWD,SAK5B3C,QAASC","file":"angular-bluebird-promises.min.js","sourcesContent":["(function(angular, window) {\n\n  'use strict';\n\n  angular\n    .module('mwl.bluebird', [])\n    .constant('Bluebird', window.P.noConflict())\n    .config(function($provide, Bluebird) {\n\n      //Make bluebird API compatible with angular's subset of $q\n      //Adapted from: https://gist.github.com/petkaantonov/8363789\n\n      Bluebird.defer = function() {\n        var b = Bluebird.pending();\n        b.resolve = angular.bind(b, b.fulfill);\n        b.reject = angular.bind(b, b.reject);\n        b.notify = angular.bind(b, b.progress);\n        return b;\n      };\n\n      Bluebird.reject = Bluebird.rejected;\n      Bluebird.when = Bluebird.cast;\n\n      var originalAll = Bluebird.all;\n      Bluebird.all = function(promises) {\n\n        if (angular.isObject(promises) && !angular.isArray(promises)) {\n\n          var promiseArray = [], promiseKeysArray = [];\n          angular.forEach(promises, function(promise, key) {\n\n            promiseKeysArray.push(key);\n            promiseArray.push(promise);\n\n          });\n\n          return originalAll(promiseArray).then(function(results) {\n\n            var objectResult = {};\n            angular.forEach(results, function(result, index) {\n              objectResult[promiseKeysArray[index]] = result;\n            });\n            return objectResult;\n\n          });\n\n        } else {\n          return originalAll(promises);\n        }\n\n      };\n\n      Bluebird.onPossiblyUnhandledRejection(angular.noop);\n\n      $provide.decorator('$q', function() {\n        return Bluebird;\n      });\n\n    }).run(function($rootScope, Bluebird) {\n\n      Bluebird.setScheduler(function(cb) {\n        $rootScope.$evalAsync(cb);\n      });\n\n    });\n\n}(angular, window));\n"],"sourceRoot":"/source/"}